@page "/usuario/create"
@using SysSeguridadG05.EN;
@inject HttpClient Http;
@inject NavigationManager NavManager

<h3>Registrar</h3>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Rol</label>
                <select class="form-control" @bind="usuario.IdRol">
                    @if (roles.Count == 0)
                    {
                        <option disabled>Cargando roles...</option>
                    }
                    else
                    {
                        <option value="">Seleccione un rol</option>
                        @foreach (var rol in roles)
                        {
                            <option value="@rol.Id">@rol.Nombre</option>
                        }
                    }
                </select>
            </div>
        </div>       
    </div>
   <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Nombre</label>
                <input type="text" class="form-control" id="idNombre" @bind-value="usuario.Nombre" />
            </div>
        </div>
   </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Apellido</label>
                <input type="text" class="form-control" id="idApellido" @bind-value="usuario.Apellido" />
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Login</label>
                <input type="text" class="form-control" id="idLogin" @bind-value="usuario.Login" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Password</label>
                <input type="text" class="form-control" id="idPassword" @bind-value="usuario.Password" />
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Estatus</label>
                <input type="text" class="form-control" id="idEstatus" @bind-value="usuario.Estatus" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="CreateUsuario">Guardar</button>
                <button class="btn btn-secondary" @onclick="Index">Regresar</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <span style="color:red; font-weight:bold">@error</span>
    </div>
</div>

@code {
    // private Rol[]? roles;
    List<Rol> roles = new List<Rol>();
    Usuario? usuario = new Usuario();
    string error = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadRoles();
    }

    private async Task LoadRoles()
    {
        try
        {
            // La API devuelve la lista de roles desde el endpoint "/api/roles"
            roles = await Http.GetFromJsonAsync<List<Rol>>("rol");
        }
        catch (Exception ex)
        {
            error = "Error al cargar los roles: " + ex.Message;
        }
    }

    public async Task CreateUsuario()
    {
        try
        {
            var resultado = await Http.PostAsJsonAsync<Usuario>("Usuario", usuario);
            if (Convert.ToInt32(resultado.StatusCode) == 200)
            {
                Index();
            }
            else
            {
                error = "Error al ingresar el Usuario";
            }
        }
        catch (Exception ex)
        {

            throw new Exception(ex.Message.ToString());
        }
    }

    void Index()
    {
        NavManager.NavigateTo("/usuario/index");
    }
}