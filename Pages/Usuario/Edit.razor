@page "/usuario/edit/{pId:int}"
@using SysSeguridadG05.EN;
@using BlazorAppG05.Data;
@inject HttpClient Http;
@inject NavigationManager NavManager

<h3>Modificar Usuario</h3>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <input type="hidden" @bind-value="usuario.Id" />
                <label class="form-label">Rol</label>
                <InputSelect id="roles" class="form-select" @bind-Value="usuario.IdRol">
                    @foreach (var item in roles)
                    {
                        @if (roles.Count == 0)
                        {
                            <option disabled>Cargando roles...</option>
                        }
                        else
                        {
                            <option value="">Seleccione un rol</option>
                            @foreach (var rol in roles)
                            {
                                <option value="@rol.Id">@rol.Nombre</option>
                            }
                        }
                    }
                </InputSelect>
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Nombre</label>
                <input type="text" class="form-control" id="idNombre" @bind-value="usuario.Nombre" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Apellido</label>
                <input type="text" class="form-control" id="idApellido" @bind-value="usuario.Apellido" />
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Login</label>
                <input type="text" class="form-control" id="idLogin" @bind-value="usuario.Login" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Estatus</label>
                <InputSelect id="roles" class="form-select" @bind-Value="usuario.Estatus">
                    @foreach (var item1 in estados)
                    {
                        <option value="@item1.Id">@item1.Nombre</option>
                    }
                </InputSelect>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="ModificarUsuario">Guardar</button>
                <button class="btn btn-secondary" @onclick="Index">Regresar</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <span style="color:red; font-weight:bold">@error</span>
    </div>
</div>

@code {
    // private Rol[]? roles;
    List<Rol> roles = new List<Rol>();
    Usuario? usuario = new Usuario();
    List<Estado> estados = new List<Estado>();
    string error = "";

    [Parameter]
    public int pId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadRoles();
    }

    private async Task LoadRoles()
    {
        try
        {
            if(pId != 0)
            {
                usuario = await Http.GetFromJsonAsync<Usuario>("Usuario/" + pId);
                roles = await Http.GetFromJsonAsync<List<Rol>>("rol");
                Estado estado = new Estado { Id = 0, Nombre = "SELECCIONAR" };
                Estado estado1 = new Estado { Id = 1, Nombre = "ACTIVO" };
                Estado estado2 = new Estado { Id = 2, Nombre = "INACTIVO" };

                estados.Add(estado);
                estados.Add(estado1);
                estados.Add(estado2);
            }
        }
        catch (Exception ex)
        {
            error = "Error al cargar los roles: " + ex.Message;
        }
    }

    public async Task ModificarUsuario()
    {
        try
        {
            var resultado = await Http.PutAsJsonAsync<Usuario>("Usuario/" + usuario.Id, usuario);
            if (Convert.ToInt32(resultado.StatusCode) == 200)
            {
                Index();
            }
            else
            {
                error = "Error al ingresar el Usuario";
            }
        }
        catch (Exception ex)
        {

            throw new Exception(ex.Message.ToString());
        }
    }

    void Index()
    {
        NavManager.NavigateTo("/usuario/index");
    }
}